//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPUListener
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MPU", Namespace="http://schemas.datacontract.org/2004/07/M3YBSCommunication")]
    public partial class MPU : object
    {
        
        private bool A1VehicleDoorStatusField;
        
        private bool A2VehicleDoorStatusField;
        
        private bool B1VehicleDoorStatusField;
        
        private bool C1VehicleDoorStatusField;
        
        private int DD_CMileageKm_1Field;
        
        private bool EVR_CResetDistField;
        
        private int EVR_ICountDistField;
        
        private bool VB_DRS_OpenDoorsLeftField;
        
        private bool VB_DRS_OpenDoorsRightField;
        
        private bool VB_DRS_TLLeftDrsReleasedField;
        
        private bool VB_DRS_TLRightDrsReleasedField;
        
        private int VI_TBS_TrainSpeedKphField;
        
        private MPUListener.EnumsCommunication communicationField;
        
        private MPUListener.EnumsConnection connectionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool A1VehicleDoorStatus
        {
            get
            {
                return this.A1VehicleDoorStatusField;
            }
            set
            {
                this.A1VehicleDoorStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool A2VehicleDoorStatus
        {
            get
            {
                return this.A2VehicleDoorStatusField;
            }
            set
            {
                this.A2VehicleDoorStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool B1VehicleDoorStatus
        {
            get
            {
                return this.B1VehicleDoorStatusField;
            }
            set
            {
                this.B1VehicleDoorStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool C1VehicleDoorStatus
        {
            get
            {
                return this.C1VehicleDoorStatusField;
            }
            set
            {
                this.C1VehicleDoorStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DD_CMileageKm_1
        {
            get
            {
                return this.DD_CMileageKm_1Field;
            }
            set
            {
                this.DD_CMileageKm_1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EVR_CResetDist
        {
            get
            {
                return this.EVR_CResetDistField;
            }
            set
            {
                this.EVR_CResetDistField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EVR_ICountDist
        {
            get
            {
                return this.EVR_ICountDistField;
            }
            set
            {
                this.EVR_ICountDistField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VB_DRS_OpenDoorsLeft
        {
            get
            {
                return this.VB_DRS_OpenDoorsLeftField;
            }
            set
            {
                this.VB_DRS_OpenDoorsLeftField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VB_DRS_OpenDoorsRight
        {
            get
            {
                return this.VB_DRS_OpenDoorsRightField;
            }
            set
            {
                this.VB_DRS_OpenDoorsRightField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VB_DRS_TLLeftDrsReleased
        {
            get
            {
                return this.VB_DRS_TLLeftDrsReleasedField;
            }
            set
            {
                this.VB_DRS_TLLeftDrsReleasedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VB_DRS_TLRightDrsReleased
        {
            get
            {
                return this.VB_DRS_TLRightDrsReleasedField;
            }
            set
            {
                this.VB_DRS_TLRightDrsReleasedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VI_TBS_TrainSpeedKph
        {
            get
            {
                return this.VI_TBS_TrainSpeedKphField;
            }
            set
            {
                this.VI_TBS_TrainSpeedKphField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MPUListener.EnumsCommunication communication
        {
            get
            {
                return this.communicationField;
            }
            set
            {
                this.communicationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MPUListener.EnumsConnection connection
        {
            get
            {
                return this.connectionField;
            }
            set
            {
                this.connectionField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.Communication", Namespace="http://schemas.datacontract.org/2004/07/M3YBSCommunication")]
    public enum EnumsCommunication : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MPU = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MPU_RED = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.Connection", Namespace="http://schemas.datacontract.org/2004/07/M3YBSCommunication")]
    public enum EnumsConnection : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_CONNECTED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONNECTED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONNECTION_LOST = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.Announcement", Namespace="http://schemas.datacontract.org/2004/07/M3YBSCommunication")]
    public enum EnumsAnnouncement : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Play = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stop = 64,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MPUListener.IM3YBSCommunication", CallbackContract=typeof(MPUListener.IM3YBSCommunicationCallback))]
    public interface IM3YBSCommunication
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/Subscribe", ReplyAction="http://tempuri.org/IM3YBSCommunication/SubscribeResponse")]
        System.Threading.Tasks.Task<bool> SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/Unsubscribe", ReplyAction="http://tempuri.org/IM3YBSCommunication/UnsubscribeResponse")]
        System.Threading.Tasks.Task<bool> UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/ResetDistanceCounter", ReplyAction="http://tempuri.org/IM3YBSCommunication/ResetDistanceCounterResponse")]
        System.Threading.Tasks.Task ResetDistanceCounterAsync(bool resetCountDist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/IncreaseDistanceCounter", ReplyAction="http://tempuri.org/IM3YBSCommunication/IncreaseDistanceCounterResponse")]
        System.Threading.Tasks.Task IncreaseDistanceCounterAsync(int increaseCountDist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/HeartBeat", ReplyAction="http://tempuri.org/IM3YBSCommunication/HeartBeatResponse")]
        System.Threading.Tasks.Task<string> HeartBeatAsync(string heartBeat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/MPUStatus", ReplyAction="http://tempuri.org/IM3YBSCommunication/MPUStatusResponse")]
        System.Threading.Tasks.Task MPUStatusAsync(MPUListener.MPU mpu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/MPUConnectionStatus", ReplyAction="http://tempuri.org/IM3YBSCommunication/MPUConnectionStatusResponse")]
        System.Threading.Tasks.Task MPUConnectionStatusAsync(MPUListener.EnumsCommunication communication, MPUListener.EnumsConnection connectionStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IM3YBSCommunication/AddOrFindInRedundancyMPU", ReplyAction="http://tempuri.org/IM3YBSCommunication/AddOrFindInRedundancyMPUResponse")]
        System.Threading.Tasks.Task<MPUListener.MPU> AddOrFindInRedundancyMPUAsync(MPUListener.EnumsCommunication communicationMPU);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/AnnouncementStatus")]
        System.Threading.Tasks.Task AnnouncementStatusAsync(MPUListener.EnumsAnnouncement status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IM3YBSCommunicationCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/MPUConnectionStatusChanged")]
        void MPUConnectionStatusChanged(MPUListener.EnumsCommunication communication, MPUListener.EnumsConnection connection);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/A1VehicleDoorStatusChanged")]
        void A1VehicleDoorStatusChanged(bool A1VehicleDoorStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/A2VehicleDoorStatusChanged")]
        void A2VehicleDoorStatusChanged(bool A2VehicleDoorStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/C1VehicleDoorStatusChanged")]
        void C1VehicleDoorStatusChanged(bool C1VehicleDoorStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/B1VehicleDoorStatusChanged")]
        void B1VehicleDoorStatusChanged(bool B1VehicleDoorStatus);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/VB_DRS_TLLeftDrsReleasedChanged")]
        void VB_DRS_TLLeftDrsReleasedChanged(bool VB_DRS_TLLeftDrsReleased);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/VB_DRS_TLRightDrsReleasedChanged")]
        void VB_DRS_TLRightDrsReleasedChanged(bool VB_DRS_TLRightDrsReleased);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/VB_DRS_OpenDoorsLeftChanged")]
        void VB_DRS_OpenDoorsLeftChanged(bool VB_DRS_OpenDoorsLeft);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/VB_DRS_OpenDoorsRightChanged")]
        void VB_DRS_OpenDoorsRightChanged(bool VB_DRS_OpenDoorsRight);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/VI_TBS_TrainSpeedKphChanged")]
        void VI_TBS_TrainSpeedKphChanged(int VI_TBS_TrainSpeedKph);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/EVR_ICountDistChanged")]
        void EVR_ICountDistChanged(int EVR_ICountDist);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/NotifyMasterMPUForResetEVRDistanceStatus")]
        void NotifyMasterMPUForResetEVRDistanceStatus(string masterMPU, bool EVR_ICountDist);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/EVR_CResetDistChanged")]
        void EVR_CResetDistChanged(bool EVR_CResetDist);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/DD_CMileageKm_1Changed")]
        void DD_CMileageKm_1Changed(int DD_CMileageKm_1);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IM3YBSCommunication/AnnouncementStatusChanged")]
        void AnnouncementStatusChanged(MPUListener.EnumsAnnouncement status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface IM3YBSCommunicationChannel : MPUListener.IM3YBSCommunication, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class M3YBSCommunicationClientBase : System.ServiceModel.DuplexClientBase<MPUListener.IM3YBSCommunication>, MPUListener.IM3YBSCommunication
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public M3YBSCommunicationClientBase(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance, M3YBSCommunicationClientBase.GetDefaultBinding(), M3YBSCommunicationClientBase.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NetTcpBinding_IM3YBSCommunication.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public M3YBSCommunicationClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration) : 
                base(callbackInstance, M3YBSCommunicationClientBase.GetBindingForEndpoint(endpointConfiguration), M3YBSCommunicationClientBase.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public M3YBSCommunicationClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(callbackInstance, M3YBSCommunicationClientBase.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public M3YBSCommunicationClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, M3YBSCommunicationClientBase.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public M3YBSCommunicationClientBase(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> SubscribeAsync()
        {
            return base.Channel.SubscribeAsync();
        }
        
        public System.Threading.Tasks.Task<bool> UnsubscribeAsync()
        {
            return base.Channel.UnsubscribeAsync();
        }
        
        public System.Threading.Tasks.Task ResetDistanceCounterAsync(bool resetCountDist)
        {
            return base.Channel.ResetDistanceCounterAsync(resetCountDist);
        }
        
        public System.Threading.Tasks.Task IncreaseDistanceCounterAsync(int increaseCountDist)
        {
            return base.Channel.IncreaseDistanceCounterAsync(increaseCountDist);
        }
        
        public System.Threading.Tasks.Task<string> HeartBeatAsync(string heartBeat)
        {
            return base.Channel.HeartBeatAsync(heartBeat);
        }
        
        public System.Threading.Tasks.Task MPUStatusAsync(MPUListener.MPU mpu)
        {
            return base.Channel.MPUStatusAsync(mpu);
        }
        
        public System.Threading.Tasks.Task MPUConnectionStatusAsync(MPUListener.EnumsCommunication communication, MPUListener.EnumsConnection connectionStatus)
        {
            return base.Channel.MPUConnectionStatusAsync(communication, connectionStatus);
        }
        
        public System.Threading.Tasks.Task<MPUListener.MPU> AddOrFindInRedundancyMPUAsync(MPUListener.EnumsCommunication communicationMPU)
        {
            return base.Channel.AddOrFindInRedundancyMPUAsync(communicationMPU);
        }
        
        public System.Threading.Tasks.Task AnnouncementStatusAsync(MPUListener.EnumsAnnouncement status)
        {
            return base.Channel.AnnouncementStatusAsync(status);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IM3YBSCommunication))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.SecurityMode.None;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IM3YBSCommunication))
            {
                return new System.ServiceModel.EndpointAddress(new System.Uri("net.tcp://10.3.156.110:8733/M3YBSCommunication/M3YBSCommunication"), new System.ServiceModel.DnsEndpointIdentity("localhost"));
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return M3YBSCommunicationClientBase.GetBindingForEndpoint(EndpointConfiguration.NetTcpBinding_IM3YBSCommunication);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return M3YBSCommunicationClientBase.GetEndpointAddress(EndpointConfiguration.NetTcpBinding_IM3YBSCommunication);
        }
        
        public enum EndpointConfiguration
        {
            
            NetTcpBinding_IM3YBSCommunication,
        }
    }
    
    public class MPUConnectionStatusChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public MPUConnectionStatusChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public MPUListener.EnumsCommunication communication
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((MPUListener.EnumsCommunication)(this.results[0]));
            }
        }
        
        public MPUListener.EnumsConnection connection
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((MPUListener.EnumsConnection)(this.results[1]));
            }
        }
    }
    
    public class A1VehicleDoorStatusChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public A1VehicleDoorStatusChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool A1VehicleDoorStatus
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class A2VehicleDoorStatusChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public A2VehicleDoorStatusChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool A2VehicleDoorStatus
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class C1VehicleDoorStatusChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public C1VehicleDoorStatusChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool C1VehicleDoorStatus
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class B1VehicleDoorStatusChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public B1VehicleDoorStatusChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool B1VehicleDoorStatus
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class VB_DRS_TLLeftDrsReleasedChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public VB_DRS_TLLeftDrsReleasedChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool VB_DRS_TLLeftDrsReleased
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class VB_DRS_TLRightDrsReleasedChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public VB_DRS_TLRightDrsReleasedChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool VB_DRS_TLRightDrsReleased
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class VB_DRS_OpenDoorsLeftChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public VB_DRS_OpenDoorsLeftChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool VB_DRS_OpenDoorsLeft
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class VB_DRS_OpenDoorsRightChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public VB_DRS_OpenDoorsRightChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool VB_DRS_OpenDoorsRight
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class VI_TBS_TrainSpeedKphChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public VI_TBS_TrainSpeedKphChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public int VI_TBS_TrainSpeedKph
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public class EVR_ICountDistChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public EVR_ICountDistChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public int EVR_ICountDist
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public class NotifyMasterMPUForResetEVRDistanceStatusReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public NotifyMasterMPUForResetEVRDistanceStatusReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public string masterMPU
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public bool EVR_ICountDist
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    public class EVR_CResetDistChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public EVR_CResetDistChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public bool EVR_CResetDist
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public class DD_CMileageKm_1ChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DD_CMileageKm_1ChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public int DD_CMileageKm_1
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public class AnnouncementStatusChangedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public AnnouncementStatusChangedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public MPUListener.EnumsAnnouncement status
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((MPUListener.EnumsAnnouncement)(this.results[0]));
            }
        }
    }
    
    public partial class M3YBSCommunicationClient : M3YBSCommunicationClientBase
    {
        
        public M3YBSCommunicationClient(EndpointConfiguration endpointConfiguration) : 
                this(new M3YBSCommunicationClientCallback(), endpointConfiguration)
        {
        }


        public M3YBSCommunicationClient(System.ServiceModel.InstanceContext callbackInstance) :
base(callbackInstance)
        {
        }

        private M3YBSCommunicationClient(M3YBSCommunicationClientCallback callbackImpl, EndpointConfiguration endpointConfiguration) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfiguration)
        {
            callbackImpl.Initialize(this);
        }
        
        public M3YBSCommunicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new M3YBSCommunicationClientCallback(), binding, remoteAddress)
        {
        }
        
        private M3YBSCommunicationClient(M3YBSCommunicationClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            callbackImpl.Initialize(this);
        }
        
        public M3YBSCommunicationClient() : 
                this(new M3YBSCommunicationClientCallback())
        {
        }
        
        private M3YBSCommunicationClient(M3YBSCommunicationClientCallback callbackImpl) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl))
        {
            callbackImpl.Initialize(this);
        }
        
        public event System.EventHandler<MPUConnectionStatusChangedReceivedEventArgs> MPUConnectionStatusChangedReceived;
        
        public event System.EventHandler<A1VehicleDoorStatusChangedReceivedEventArgs> A1VehicleDoorStatusChangedReceived;
        
        public event System.EventHandler<A2VehicleDoorStatusChangedReceivedEventArgs> A2VehicleDoorStatusChangedReceived;
        
        public event System.EventHandler<C1VehicleDoorStatusChangedReceivedEventArgs> C1VehicleDoorStatusChangedReceived;
        
        public event System.EventHandler<B1VehicleDoorStatusChangedReceivedEventArgs> B1VehicleDoorStatusChangedReceived;
        
        public event System.EventHandler<VB_DRS_TLLeftDrsReleasedChangedReceivedEventArgs> VB_DRS_TLLeftDrsReleasedChangedReceived;
        
        public event System.EventHandler<VB_DRS_TLRightDrsReleasedChangedReceivedEventArgs> VB_DRS_TLRightDrsReleasedChangedReceived;
        
        public event System.EventHandler<VB_DRS_OpenDoorsLeftChangedReceivedEventArgs> VB_DRS_OpenDoorsLeftChangedReceived;
        
        public event System.EventHandler<VB_DRS_OpenDoorsRightChangedReceivedEventArgs> VB_DRS_OpenDoorsRightChangedReceived;
        
        public event System.EventHandler<VI_TBS_TrainSpeedKphChangedReceivedEventArgs> VI_TBS_TrainSpeedKphChangedReceived;
        
        public event System.EventHandler<EVR_ICountDistChangedReceivedEventArgs> EVR_ICountDistChangedReceived;
        
        public event System.EventHandler<NotifyMasterMPUForResetEVRDistanceStatusReceivedEventArgs> NotifyMasterMPUForResetEVRDistanceStatusReceived;
        
        public event System.EventHandler<EVR_CResetDistChangedReceivedEventArgs> EVR_CResetDistChangedReceived;
        
        public event System.EventHandler<DD_CMileageKm_1ChangedReceivedEventArgs> DD_CMileageKm_1ChangedReceived;
        
        public event System.EventHandler<AnnouncementStatusChangedReceivedEventArgs> AnnouncementStatusChangedReceived;
        
        private void OnMPUConnectionStatusChangedReceived(object state)
        {
            if ((this.MPUConnectionStatusChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.MPUConnectionStatusChangedReceived(this, new MPUConnectionStatusChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnA1VehicleDoorStatusChangedReceived(object state)
        {
            if ((this.A1VehicleDoorStatusChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.A1VehicleDoorStatusChangedReceived(this, new A1VehicleDoorStatusChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnA2VehicleDoorStatusChangedReceived(object state)
        {
            if ((this.A2VehicleDoorStatusChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.A2VehicleDoorStatusChangedReceived(this, new A2VehicleDoorStatusChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnC1VehicleDoorStatusChangedReceived(object state)
        {
            if ((this.C1VehicleDoorStatusChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.C1VehicleDoorStatusChangedReceived(this, new C1VehicleDoorStatusChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnB1VehicleDoorStatusChangedReceived(object state)
        {
            if ((this.B1VehicleDoorStatusChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.B1VehicleDoorStatusChangedReceived(this, new B1VehicleDoorStatusChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnVB_DRS_TLLeftDrsReleasedChangedReceived(object state)
        {
            if ((this.VB_DRS_TLLeftDrsReleasedChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.VB_DRS_TLLeftDrsReleasedChangedReceived(this, new VB_DRS_TLLeftDrsReleasedChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnVB_DRS_TLRightDrsReleasedChangedReceived(object state)
        {
            if ((this.VB_DRS_TLRightDrsReleasedChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.VB_DRS_TLRightDrsReleasedChangedReceived(this, new VB_DRS_TLRightDrsReleasedChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnVB_DRS_OpenDoorsLeftChangedReceived(object state)
        {
            if ((this.VB_DRS_OpenDoorsLeftChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.VB_DRS_OpenDoorsLeftChangedReceived(this, new VB_DRS_OpenDoorsLeftChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnVB_DRS_OpenDoorsRightChangedReceived(object state)
        {
            if ((this.VB_DRS_OpenDoorsRightChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.VB_DRS_OpenDoorsRightChangedReceived(this, new VB_DRS_OpenDoorsRightChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnVI_TBS_TrainSpeedKphChangedReceived(object state)
        {
            if ((this.VI_TBS_TrainSpeedKphChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.VI_TBS_TrainSpeedKphChangedReceived(this, new VI_TBS_TrainSpeedKphChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnEVR_ICountDistChangedReceived(object state)
        {
            if ((this.EVR_ICountDistChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.EVR_ICountDistChangedReceived(this, new EVR_ICountDistChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnNotifyMasterMPUForResetEVRDistanceStatusReceived(object state)
        {
            if ((this.NotifyMasterMPUForResetEVRDistanceStatusReceived != null))
            {
                object[] results = ((object[])(state));
                this.NotifyMasterMPUForResetEVRDistanceStatusReceived(this, new NotifyMasterMPUForResetEVRDistanceStatusReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnEVR_CResetDistChangedReceived(object state)
        {
            if ((this.EVR_CResetDistChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.EVR_CResetDistChangedReceived(this, new EVR_CResetDistChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDD_CMileageKm_1ChangedReceived(object state)
        {
            if ((this.DD_CMileageKm_1ChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.DD_CMileageKm_1ChangedReceived(this, new DD_CMileageKm_1ChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnAnnouncementStatusChangedReceived(object state)
        {
            if ((this.AnnouncementStatusChangedReceived != null))
            {
                object[] results = ((object[])(state));
                this.AnnouncementStatusChangedReceived(this, new AnnouncementStatusChangedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private class M3YBSCommunicationClientCallback : object, IM3YBSCommunicationCallback
        {
            
            private M3YBSCommunicationClient proxy;
            
            public void Initialize(M3YBSCommunicationClient proxy)
            {
                this.proxy = proxy;
            }
            
            public void MPUConnectionStatusChanged(MPUListener.EnumsCommunication communication, MPUListener.EnumsConnection connection)
            {
                this.proxy.OnMPUConnectionStatusChangedReceived(new object[] {
                            communication,
                            connection});
            }
            
            public void A1VehicleDoorStatusChanged(bool A1VehicleDoorStatus)
            {
                this.proxy.OnA1VehicleDoorStatusChangedReceived(new object[] {
                            A1VehicleDoorStatus});
            }
            
            public void A2VehicleDoorStatusChanged(bool A2VehicleDoorStatus)
            {
                this.proxy.OnA2VehicleDoorStatusChangedReceived(new object[] {
                            A2VehicleDoorStatus});
            }
            
            public void C1VehicleDoorStatusChanged(bool C1VehicleDoorStatus)
            {
                this.proxy.OnC1VehicleDoorStatusChangedReceived(new object[] {
                            C1VehicleDoorStatus});
            }
            
            public void B1VehicleDoorStatusChanged(bool B1VehicleDoorStatus)
            {
                this.proxy.OnB1VehicleDoorStatusChangedReceived(new object[] {
                            B1VehicleDoorStatus});
            }
            
            public void VB_DRS_TLLeftDrsReleasedChanged(bool VB_DRS_TLLeftDrsReleased)
            {
                this.proxy.OnVB_DRS_TLLeftDrsReleasedChangedReceived(new object[] {
                            VB_DRS_TLLeftDrsReleased});
            }
            
            public void VB_DRS_TLRightDrsReleasedChanged(bool VB_DRS_TLRightDrsReleased)
            {
                this.proxy.OnVB_DRS_TLRightDrsReleasedChangedReceived(new object[] {
                            VB_DRS_TLRightDrsReleased});
            }
            
            public void VB_DRS_OpenDoorsLeftChanged(bool VB_DRS_OpenDoorsLeft)
            {
                this.proxy.OnVB_DRS_OpenDoorsLeftChangedReceived(new object[] {
                            VB_DRS_OpenDoorsLeft});
            }
            
            public void VB_DRS_OpenDoorsRightChanged(bool VB_DRS_OpenDoorsRight)
            {
                this.proxy.OnVB_DRS_OpenDoorsRightChangedReceived(new object[] {
                            VB_DRS_OpenDoorsRight});
            }
            
            public void VI_TBS_TrainSpeedKphChanged(int VI_TBS_TrainSpeedKph)
            {
                this.proxy.OnVI_TBS_TrainSpeedKphChangedReceived(new object[] {
                            VI_TBS_TrainSpeedKph});
            }
            
            public void EVR_ICountDistChanged(int EVR_ICountDist)
            {
                this.proxy.OnEVR_ICountDistChangedReceived(new object[] {
                            EVR_ICountDist});
            }
            
            public void NotifyMasterMPUForResetEVRDistanceStatus(string masterMPU, bool EVR_ICountDist)
            {
                this.proxy.OnNotifyMasterMPUForResetEVRDistanceStatusReceived(new object[] {
                            masterMPU,
                            EVR_ICountDist});
            }
            
            public void EVR_CResetDistChanged(bool EVR_CResetDist)
            {
                this.proxy.OnEVR_CResetDistChangedReceived(new object[] {
                            EVR_CResetDist});
            }
            
            public void DD_CMileageKm_1Changed(int DD_CMileageKm_1)
            {
                this.proxy.OnDD_CMileageKm_1ChangedReceived(new object[] {
                            DD_CMileageKm_1});
            }
            
            public void AnnouncementStatusChanged(MPUListener.EnumsAnnouncement status)
            {
                this.proxy.OnAnnouncementStatusChangedReceived(new object[] {
                            status});
            }
        }
    }
}
